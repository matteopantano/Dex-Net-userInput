import json

import numpy as np


def sample_points(point_number = 10):
	points = []
	for point_idx in range(point_number):
		mean = [0.0, 0.0, 0.005]
		standard_deviations = [0.01, 0.01, 0.005]
		points.append( np.random.normal(mean, standard_deviations))
	return points

def save_points(points, point_dir):
	for point_idx, point in enumerate(points):
		point_path = point_dir + "/" + str(point_idx) + "_point.txt"
		np.savetxt(point_path , point)
	return 

def transform_camera_pose_nerf_to_dexnet(camera_pose_path):
    with open(camera_pose_path, 'r') as f:
        data = json.load(f)
    for pose in data:
        transform_matrix = pose['transform_matrix']
        transform_matrix = np.array([transform_matrix[0], transform_matrix[1], transform_matrix[2], transform_matrix[3]])
        # TODO: add saving to dexnet format
    return 

if __name__ == '__main__':
    camera_pose_path = '/home/vladislav/fmp_nerf/synthetic_data/testtransforms_.json'
    transform_matrix = transform_camera_pose_nerf_to_dexnet(camera_pose_path)
   
    
    # fake and save a tracepen point 
    point_number = 10
    points = sample_points(point_number)
    point_path = "./fmp-tools/points/"
    save_points(points, point_path)

